@{
    ViewBag.Title = "DangNhap";
    Layout = null;
}

<link rel="stylesheet" href="~/StyleCSS/DangNhap.css" />
<link rel="stylesheet" href="~/StyleCSS/alert.css" />

<div class="login-page">
    <div class="login-container">
        <div class="form-container">
            <h2>Welcome back!</h2>
            <p>Please enter your details</p>
            <form method="post" action="/User/DangNhap">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" name="username"
                           placeholder="Enter your username"
                           required
                           value="@(Request.Cookies["Username"]?.Value ?? "")" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password"
                           placeholder="Enter your password"
                           required
                           value="@(Request.Cookies["Password"]?.Value ?? "")" />
                    @if (ViewData["Err2"] != null)
                    {
                        <span class="error">@ViewData["Err2"]</span>
                    }
                </div>


                <div class="form-options">
                    <div class="remember-me">
                        <input type="checkbox" id="remember" name="remember"
                               @(Request.Cookies["Username"] != null ? "checked" : "") />
                        <label for="remember">Remember for 30 days</label>
                    </div>
                    <a href="@Url.Action("QuenMatKhau", "User")" class="forgot-password">Forgot password?</a>
                </div>
                <div class="form-group">
                    <label for="captcha">Captcha</label>
                    <div class="captcha-section">
                        <img id="captchaImage" src="/User/Generate" alt="Captcha" />

                        <button type="button" onclick="reloadCaptcha()" class="reload-btn">
                            Đổi Captcha
                        </button>
                    </div>
                    <input type="text" id="captchaInput" name="captchaInput" class="form-control" placeholder="Enter captcha" required />
                    @if (ViewBag.ErrCaptcha != null)
                    {
                        <span class="error">@ViewBag.ErrCaptcha</span>
                    }
                </div>

                <h4 style="color:red; text-align:center;">@ViewBag.ThongBao</h4>
                <div class="nut">
                    <button type="submit" class="btn-login">Log in</button>
                    <button type="button" class="btn-google">
                        <a href="@ViewBag.response" class="aaa">
                            <img src="~/Images/google-icon.png" alt="Icon" class="btn-icon"> Login with Google
                        </a>
                    </button>
                    <button type="button" class="btn-google">
                        <a href="@Url.Action("LoginWithFacebook", "User")" class="aaa" onclick="login();">
                            <img src="~/Images/facebook.png" alt="Icon" class="btn-icon"> Login with Facebook
                        </a>
                    </button>
                </div>
            </form>

            <div class="register-link">
                <p>Don't have an account? <a href="/User/DangKy">Sign up</a></p>
            </div>
        </div>

        <div class="image-container">
            <img src="~/Images/Login.gif" alt="Illustration" />
        </div>
    </div>
</div>

<div id="toastContainer"></div>

<script>
    function reloadCaptcha() {
        var captchaImg = document.getElementById("captchaImage");
        captchaImg.src = "/User/Generate?" + new Date().getTime(); // Thêm timestamp để load mới
    }
</script>
<style>
    /* Đặt lại các phần tử trong .captcha-section để căn chỉnh ngang */
    .captcha-section {
        display: flex;
        justify-content: center; /* Căn giữa các phần tử */
        align-items: center; /* Căn chỉnh theo chiều dọc */
        margin-bottom: 20px;
    }

        .captcha-section img {
            width: 150px; /* Điều chỉnh kích thước hình ảnh captcha */
            height: auto;
            margin-right: 10px; /* Khoảng cách giữa hình ảnh và nút */
        }

    .reload-btn {
        border: none;
        padding: 8px 12px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }
</style>

<script>
   document.addEventListener('DOMContentLoaded', function () {
        const toastContainer = document.getElementById('toastContainer');
        const loginForm = document.getElementById('loginForm');
        const usernameInput = document.getElementById('username');
        const passwordInput = document.getElementById('password');

        const message = @Html.Raw(Json.Encode(ViewBag.ToastMessage ?? ""));
        const type = "@ViewBag.ToastType";

        if (message !== "") {
            showToast(message, type);

            if (type === 'success') {
                setTimeout(() => {
                    window.location.href = '@Url.Action("Index", "TrangChu")';
                }, 2000);
            }
        }

        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.classList.add('toast', type);

            let icon = type === 'success' ? '✅' : '❌';

            toast.innerHTML = `
                <span class="toast-icon">${icon}</span>
                <span>${escapeHtml(message)}</span>
            `;

            toastContainer.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('show');
            }, 10);

            setTimeout(() => {
                hideToast(toast);
            }, 3000);
        }

        function hideToast(toast) {
            toast.classList.remove('show');
            setTimeout(() => {
                toast.remove();
            }, 500);
        }

        function escapeHtml(str) {
            const div = document.createElement('div');
            div.appendChild(document.createTextNode(str));
            return div.innerHTML;
        }

        // AJAX to check if username exists
        usernameInput.addEventListener('blur', function () {
            const username = usernameInput.value.trim();
            if (username !== '') {
                fetch('/User/CheckUsername?username=' + encodeURIComponent(username))
                    .then(response => response.json())
                    .then(data => {
                        if (!data.exists) {
                            showToast("Tài khoản không tồn tại.", "error");
                        }
                    })
                    .catch(error => {
                        console.error('Error checking username:', error);
                    });
            }
        });

        loginForm.addEventListener('submit', function (event) {
            toastContainer.innerHTML = '';

            const username = usernameInput.value.trim();
            const password = passwordInput.value.trim();

            if (username === '' && password === '') {
                event.preventDefault();
                showToast("Vui lòng nhập thông tin đăng nhập.", "error");
                return;
            }

            if (username === '') {
                event.preventDefault();
                showToast("Vui lòng nhập tên đăng nhập.", "error");
                return;
            }

            if (password === '') {
                event.preventDefault();
                showToast("Vui lòng nhập mật khẩu.", "error");
                return;
            }
        });
    });
</script>